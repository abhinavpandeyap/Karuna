<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Spring]]></title><description><![CDATA[Level up your Java code and explore what Spring can do for you.]]></description><link>https://spring.io</link><generator>GatsbyJS</generator><lastBuildDate>Sat, 11 Mar 2023 14:53:45 GMT</lastBuildDate><item><title><![CDATA[A Bootiful Podcast:  Google Cloud Java Advocate Aaron Wanjala]]></title><link>https://spring.io/blog/2023/03/09/a-bootiful-podcast-google-cloud-java-advocate-aaron-wanjala</link><guid isPermaLink="true">https://spring.io/blog/2023/03/09/a-bootiful-podcast-google-cloud-java-advocate-aaron-wanjala</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Thu, 09 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! In this installment, &lt;a href=&quot;https://twitter.com/starbuxman&quot;&gt;Josh Long (@starbuxman)&lt;/a&gt; talks to Google Cloud Java advocate &lt;a href=&quot;https://twitter.com/AaronMDubya&quot;&gt;Aaron Wanjala (@ AaronMDubya)&lt;/a&gt; about Spring Framework for Google Cloud&lt;/p&gt;
&lt;iframe title=&quot;Google Cloud Java Advocate Aaron Wanjala&quot; allowtransparency=&quot;true&quot; height=&quot;150&quot; width=&quot;100%&quot; style=&quot;border: none; min-width: min(100%, 430px);&quot; scrolling=&quot;no&quot; data-name=&quot;pb-iframe-player&quot; src=&quot;https://www.podbean.com/player-v2/?i=jrsce-13b10d0-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;logo_link=episode_page&amp;btn-skin=7&quot;&gt;&lt;/iframe&gt;</content:encoded></item><item><title><![CDATA[The SpringOne@Explore Calls for Paper is Open!]]></title><link>https://spring.io/blog/2023/03/08/the-springone-explore-calls-for-paper-is-open</link><guid isPermaLink="true">https://spring.io/blog/2023/03/08/the-springone-explore-calls-for-paper-is-open</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Wed, 08 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! The Spring community is everything. Without your voice, there is no Spring. And we love to hear from you. Make your voice heard and &lt;strong&gt;&lt;a href=&quot;https://event.vmware.com/flow/vmware/explore2023lv/cfp/cfpHome&quot;&gt;submit a talk&lt;/a&gt;&lt;/strong&gt; for the &lt;strong&gt;SpringOne@Explore&lt;/strong&gt; conference being held in tandem with &lt;a href=&quot;https://www.vmware.com/explore.html&quot;&gt;VMWare  Explore&lt;/a&gt; in Las Vegas August 21st to 24th, 2023.&lt;/p&gt;
&lt;p&gt;See you in Vegas!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Cloud Data Flow 2.10.2 Released]]></title><link>https://spring.io/blog/2023/03/08/spring-cloud-data-flow-2-10-2-released</link><guid isPermaLink="true">https://spring.io/blog/2023/03/08/spring-cloud-data-flow-2-10-2-released</guid><dc:creator><![CDATA[Corneil du Plessis]]></dc:creator><pubDate>Wed, 08 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the team and everyone who has contributed, we are very excited to announce the &lt;code&gt;2.10.2&lt;/code&gt; release of Spring Cloud Data Flow is now available from Maven Central. &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-dataflow/releases/tag/v2.10.2&quot;&gt;Release Notes&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Spring updates&lt;/h3&gt;
&lt;p&gt;Updates to the following versions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spring Boot 2.7.9&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Stay in touch...&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://spring.io/projects/spring-cloud-dataflow&quot;&gt;Project Page&lt;/a&gt;
&lt;a href=&quot;https://dataflow.spring.io/&quot;&gt;Data Flow Mini-site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As always, we welcome feedback and contributions, so please reach out to us on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/spring-cloud-dataflow&quot;&gt;Stackoverflow&lt;/a&gt; or &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-dataflow/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Modulith 0.5 released]]></title><link>https://spring.io/blog/2023/03/08/spring-modulith-0-5-released</link><guid isPermaLink="true">https://spring.io/blog/2023/03/08/spring-modulith-0-5-released</guid><dc:creator><![CDATA[Oliver Drotbohm]]></dc:creator><pubDate>Wed, 08 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I am excited to announce the availability of Spring Modulith 0.5. The most relevant features the release ships are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects-experimental/spring-modulith/issues/152&quot;&gt;#152&lt;/a&gt; – A dedicated starter to ease inclusion of actuator and observability features&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects-experimental/spring-modulith/issues/163&quot;&gt;#163&lt;/a&gt; – The renamed property to trigger JDBC database initialization. (&lt;code&gt;spring.modulith.events.schema-initialization.enabled&lt;/code&gt; -&gt; &lt;code&gt;spring.modulith.events.jdbc-schema-initialization.enabled&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects-experimental/spring-modulith/issues/149&quot;&gt;#149&lt;/a&gt; – Default to await termination of task executors unless configured not to&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects-experimental/spring-modulith/issues/150&quot;&gt;#150&lt;/a&gt; – &lt;code&gt;Scenario&lt;/code&gt; should run stimulus in new transaction&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects-experimental/spring-modulith/issues/162&quot;&gt;#162&lt;/a&gt;, &lt;a href=&quot;https://github.com/spring-projects-experimental/spring-modulith/issues/154&quot;&gt;#154&lt;/a&gt; – The usual dependency upgrades (Spring Boot 3.0.4, jMolecules 2022.2.4)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information, please consult the complete &lt;a href=&quot;https://github.com/spring-projects-experimental/spring-modulith/releases/tag/0.5.0&quot;&gt;changelog&lt;/a&gt; or the &lt;a href=&quot;https://docs.spring.io/spring-modulith/docs/0.5.0/reference/html/&quot;&gt;reference documentation&lt;/a&gt;. Please provide feedback in the &lt;a href=&quot;https://github.com/spring-projects-experimental/spring-modulith/issues&quot;&gt;bug tracker&lt;/a&gt; or &lt;a href=&quot;https://github.com/spring-projects-experimental/spring-modulith/discussions&quot;&gt;discussion forums&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[This Week in Spring - March 7th, 2023]]></title><link>https://spring.io/blog/2023/03/07/this-week-in-spring-march-7th-2023</link><guid isPermaLink="true">https://spring.io/blog/2023/03/07/this-week-in-spring-march-7th-2023</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Tue, 07 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! It&apos;s an amazing week, and this week we&apos;ve got a lot to look at. Let&apos;s dive right into it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/03/02/spring-cloud-function-for-azure-function&quot;&gt;Spring Cloud Function for Azure Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/03/03/spring-data-2022-0-3-and-2021-2-9-released&quot;&gt;Spring Data 2022.0.3 and 2021.2.9 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gokhana.dev/spring-r2dbc-for-reactive-relational-databases-in-reactive-programming/&quot;&gt;Spring R2DBC for Reactive Relational Databases in Reactive Programming | Gökhan Ayranc?o?lu - Software Engineer, Blogger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I&apos;ll be joining Mark Thomas, legendary contributor to Apache Tomcat, &lt;a href=&quot;https://www.youtube.com/watch?v=IgtpMcq3AX8&quot;&gt;&lt;em&gt;live&lt;/em&gt; at 9am here &lt;/a&gt;. Join us, bring your questions, etc.&lt;/li&gt;
&lt;li&gt;JRebel has a nice look &lt;a href=&quot;https://www.jrebel.com/blog/spring-6-features&quot;&gt;at the New Features in Spring Framework 6 | JRebel by Perforce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/729726380/0/baeldung~Authenticating-Users-with-AzureAD-in-Spring-Boot&quot;&gt;Authenticating Users with AzureAD in Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/729489977/0/baeldung~Debugging-Spring-Method-Annotations-Using-Lightrun&quot;&gt;Debugging Spring Method Annotations Using Lightrun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/729726383/0/baeldung~Migrate-Application-From-Spring-Boot-to-Spring-Boot&quot;&gt;Migrate Application From Spring Boot 2 to Spring Boot 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/729167318/0/baeldung~Pitfalls-on-Testing-with-Spring-Boot&quot;&gt;Pitfalls on Testing with Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/729729926/0/baeldung~Post-formurlencoded-Data-with-Spring-Cloud-Feign&quot;&gt;Post form-url-encoded Data with Spring Cloud Feign&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mariadb.com/resources/blog/reactive-programming-with-spring-data-r2dbc-on-mariadb-skysql/&quot;&gt;Reactive Programming with Spring Data R2DBC on MariaDB SkySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/JavaAtMicrosoft/status/1631750925730676736&quot;&gt;The latest updates to Visual Studio @code for #Java bring support for JUnit 5 parallel testing and a filter widget in the Spring Boot dashboard. Learn more about the February &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Project Panama is so cool! It provides an &lt;em&gt;easy&lt;/em&gt; way to interact with native code. Check out the Baeldung article: &lt;a href=&quot;https://feeds.feedblitz.com/~/729383405/0/baeldung~Guide-to-Java-Project-Panama&quot;&gt;Guide to Java Project Panama&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/729647786/0/baeldung~Managing-Multiple-JDK-Installations-With-jEnv&quot;&gt;Managing Multiple JDK Installations With jEnv&lt;/a&gt;. SDKMan and jEnv both provide a fantastic way to automatically manage Java environments.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Spring Boot 3.0.4 available now]]></title><link>https://spring.io/blog/2023/03/03/spring-boot-3-0-4-available-now</link><guid isPermaLink="true">https://spring.io/blog/2023/03/03/spring-boot-3-0-4-available-now</guid><dc:creator><![CDATA[Jonatan Ivanov]]></dc:creator><pubDate>Fri, 03 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the team and everyone who has contributed, I&apos;m happy to announce that Spring Boot &lt;code&gt;3.0.4&lt;/code&gt; has been released and is now available from Maven Central.&lt;/p&gt;
&lt;p&gt;The release was earlier than originally scheduled because of a &lt;a href=&quot;https://github.com/spring-projects/spring-framework/issues/30031&quot; title=&quot;#30031&quot;&gt;regression&lt;/a&gt; found in Spring Framework and it includes &lt;a href=&quot;https://github.com/spring-projects/spring-boot/releases/tag/v3.0.4&quot;&gt;19 bug fixes, documentation improvements, and dependency upgrades&lt;/a&gt;. Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;
&lt;h3&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&apos;re interested in helping out, check out the &lt;a href=&quot;https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution&quot;&gt;&quot;ideal for contribution&quot; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href=&quot;https://stackoverflow.com&quot;&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href=&quot;https://stackoverflow.com/tags/spring-boot&quot;&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community on &lt;a href=&quot;https://gitter.im/spring-projects/spring-boot&quot;&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://spring.io/projects/spring-boot/&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-boot&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-boot/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/3.0.4/reference/html&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://stackoverflow.com/questions/tagged/spring-boot&quot;&gt;Stack Overflow&lt;/a&gt; | &lt;a href=&quot;https://gitter.im/spring-projects/spring-boot&quot;&gt;Gitter&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Data 2022.0.3 and 2021.2.9 released]]></title><link>https://spring.io/blog/2023/03/03/spring-data-2022-0-3-and-2021-2-9-released</link><guid isPermaLink="true">https://spring.io/blog/2023/03/03/spring-data-2022-0-3-and-2021-2-9-released</guid><dc:creator><![CDATA[Mark Paluch]]></dc:creator><pubDate>Fri, 03 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the team, I’m pleased to announce the availability of Spring Data &lt;code&gt;2022.0.3&lt;/code&gt; and &lt;code&gt;2021.2.9&lt;/code&gt; service releases. These releases ship with improvements, including fixes for regressions. Some of them were important enough that we decided to release this version early, outside of the usual schedule.&lt;/p&gt;
&lt;p&gt;The upcoming Spring Boot &lt;code&gt;3.0.4&lt;/code&gt; release is going to pick up Spring Data &lt;code&gt;2022.0.3&lt;/code&gt; for your convenience. If you want to upgrade your Spring Boot &lt;code&gt;2.7.x&lt;/code&gt; application to use Spring Data &lt;code&gt;2021.2.9&lt;/code&gt;, then use the version property mechanism to specify the Spring Data BOM version:&lt;/p&gt;
&lt;p&gt;Maven POM:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#x3C;properties&gt;
  &amp;#x3C;spring-data-bom.version&gt;2021.2.9&amp;#x3C;/spring-data-bom.version&gt;
&amp;#x3C;/properties&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ext[&apos;spring-data-bom.version&apos;] = &apos;2021.2.9&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;2022.0.3&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Spring Data Commons &lt;code&gt;3.0.3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/3.0.3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/commons/docs/3.0.3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/commons/docs/3.0.3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-commons/releases/tag/3.0.3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data JPA &lt;code&gt;3.0.3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/3.0.3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jpa/docs/3.0.3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jpa/docs/3.0.3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-jpa/releases/tag/3.0.3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data MongoDB &lt;code&gt;4.0.3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/4.0.3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/mongodb/docs/4.0.3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/mongodb/docs/4.0.3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-mongodb/releases/tag/4.0.3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data KeyValue &lt;code&gt;3.0.3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/3.0.3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/keyvalue/docs/3.0.3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/keyvalue/docs/3.0.3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-keyvalue/releases/tag/3.0.3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data for Apache Cassandra &lt;code&gt;4.0.3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/4.0.3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/cassandra/docs/4.0.3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/cassandra/docs/4.0.3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-cassandra/releases/tag/4.0.3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Neo4j &lt;code&gt;7.0.3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/7.0.3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/neo4j/docs/7.0.3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/neo4j/docs/7.0.3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-neo4j/releases/tag/7.0.3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data LDAP &lt;code&gt;3.0.3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-ldap/3.0.3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/ldap/docs/3.0.3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/ldap/docs/3.0.3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-ldap/releases/tag/3.0.3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data REST &lt;code&gt;4.0.3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/4.0.3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/rest/docs/4.0.3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/rest/docs/4.0.3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-rest/releases/tag/4.0.3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Redis &lt;code&gt;3.0.3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/3.0.3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/redis/docs/3.0.3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/redis/docs/3.0.3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-redis/releases/tag/3.0.3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Elasticsearch &lt;code&gt;5.0.3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/5.0.3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/elasticsearch/docs/5.0.3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/elasticsearch/docs/5.0.3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-elasticsearch/releases/tag/5.0.3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Couchbase &lt;code&gt;5.0.3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/5.0.3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/couchbase/docs/5.0.3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/couchbase/docs/5.0.3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-couchbase/releases/tag/5.0.3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Relational &lt;code&gt;3.0.3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-relational/3.0.3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jdbc/docs/3.0.3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jdbc/docs/3.0.3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-relational/releases/tag/3.0.3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;2021.2.9&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Spring Data Commons &lt;code&gt;2.7.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/2.7.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/commons/docs/2.7.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/commons/docs/2.7.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-commons/releases/tag/2.7.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data JDBC &lt;code&gt;2.4.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-jdbc/2.4.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jdbc/docs/2.4.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jdbc/docs/2.4.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-relational/releases/tag/2.4.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data JPA &lt;code&gt;2.7.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/2.7.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jpa/docs/2.7.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jpa/docs/2.7.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-jpa/releases/tag/2.7.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data MongoDB &lt;code&gt;3.4.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/3.4.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/mongodb/docs/3.4.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/mongodb/docs/3.4.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-mongodb/releases/tag/3.4.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data KeyValue &lt;code&gt;2.7.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/2.7.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/keyvalue/docs/2.7.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/keyvalue/docs/2.7.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-keyvalue/releases/tag/2.7.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data for Apache Cassandra &lt;code&gt;3.4.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/3.4.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/cassandra/docs/3.4.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/cassandra/docs/3.4.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-cassandra/releases/tag/3.4.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Neo4j &lt;code&gt;6.3.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/6.3.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/neo4j/docs/6.3.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/neo4j/docs/6.3.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-neo4j/releases/tag/6.3.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data R2DBC &lt;code&gt;1.5.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-r2dbc/1.5.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/r2dbc/docs/1.5.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/r2dbc/docs/1.5.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-r2dbc/releases/tag/1.5.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data for Apache Geode &lt;code&gt;2.7.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-geode/2.7.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/geode/docs/2.7.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/geode/docs/2.7.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-geode/releases/tag/2.7.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data LDAP &lt;code&gt;2.7.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-ldap/2.7.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/ldap/docs/2.7.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/ldap/docs/2.7.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-ldap/releases/tag/2.7.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Envers &lt;code&gt;2.7.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-envers/2.7.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/envers/docs/2.7.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/envers/docs/2.7.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-envers/releases/tag/2.7.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data REST &lt;code&gt;3.7.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/3.7.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/rest/docs/3.7.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/rest/docs/3.7.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-rest/releases/tag/3.7.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Redis &lt;code&gt;2.7.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/2.7.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/redis/docs/2.7.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/redis/docs/2.7.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-redis/releases/tag/2.7.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Elasticsearch &lt;code&gt;4.4.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/4.4.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/elasticsearch/docs/4.4.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/elasticsearch/docs/4.4.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-elasticsearch/releases/tag/4.4.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Couchbase &lt;code&gt;4.4.9&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/4.4.9&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/couchbase/docs/4.4.9/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/couchbase/docs/4.4.9/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-couchbase/releases/tag/4.4.9&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[A Bootiful Podcast: Spring Cloud Stream and Spring Cloud Function lead Oleg Zhurakousky]]></title><link>https://spring.io/blog/2023/03/02/a-bootiful-podcast-spring-cloud-stream-and-spring-cloud-function-lead-oleg</link><guid isPermaLink="true">https://spring.io/blog/2023/03/02/a-bootiful-podcast-spring-cloud-stream-and-spring-cloud-function-lead-oleg</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Thu, 02 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi Spring fans! Welcome to another installment of a bootiful podcast! in this installment, our pal &lt;a href=&quot;https://twitter.com/z_oleg&quot;&gt;Oleg Zhurakousky (@z_oleg)&lt;/a&gt;, lead of Spring Cloud Stream and Spring Cloud Function, rejoins the show to talk about the latest and greatest in stream processing.&lt;/p&gt;
&lt;iframe title=&quot;Spring Cloud Stream lead Oleg Zhurakousky on Spring Cloud Stream, Spring Cloud Function, Integration and more&quot; allowtransparency=&quot;true&quot; height=&quot;150&quot; width=&quot;100%&quot; style=&quot;border: none; min-width: min(100%, 430px);&quot; scrolling=&quot;no&quot; data-name=&quot;pb-iframe-player&quot; src=&quot;https://www.podbean.com/player-v2/?i=pwszb-13a7131-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;logo_link=episode_page&amp;btn-skin=7&quot;&gt;&lt;/iframe&gt;</content:encoded></item><item><title><![CDATA[Spring Framework 6.0.6 available now]]></title><link>https://spring.io/blog/2023/03/02/spring-framework-6-0-6-available-now</link><guid isPermaLink="true">https://spring.io/blog/2023/03/02/spring-framework-6-0-6-available-now</guid><dc:creator><![CDATA[Brian Clozel]]></dc:creator><pubDate>Thu, 02 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the team and everyone who has contributed, I am pleased to announce that Spring Framework &lt;code&gt;6.0.6&lt;/code&gt; is available now.&lt;/p&gt;
&lt;p&gt;Spring Framework &lt;code&gt;6.0.6&lt;/code&gt; ships with &lt;a href=&quot;https://github.com/spring-projects/spring-framework/releases/tag/v6.0.6&quot;&gt;35 fixes and documentation improvements&lt;/a&gt;, including &lt;a href=&quot;https://github.com/spring-projects/spring-framework/issues?q=is%3Aclosed+milestone%3A6.0.6+label%3A%22type%3A+regression%22&quot;&gt;7 fixes for regressions&lt;/a&gt;. Some of them were important enough that we decided to release this version early, outside of the usual schedule.&lt;/p&gt;
&lt;p&gt;This version will be shipped with Spring Boot 3.0.4, &lt;a href=&quot;https://calendar.spring.io/&quot;&gt;to be released tomorrow&lt;/a&gt;. Spring Framework 6.0.7 and 5.3.26 will be released in two weeks as planned initially.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://projects.spring.io/spring-framework/&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-framework&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-framework/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/6.0.6/reference/html/&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Cloud Function for Azure Function]]></title><link>https://spring.io/blog/2023/03/02/spring-cloud-function-for-azure-function</link><guid isPermaLink="true">https://spring.io/blog/2023/03/02/spring-cloud-function-for-azure-function</guid><dc:creator><![CDATA[Christian Tzolov]]></dc:creator><pubDate>Thu, 02 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;What is the Spring Cloud Function?&lt;/h2&gt;
&lt;p&gt;Spring Cloud Function is a SpringBoot-based framework allowing users to concentrate on their business logic by implementing them as Java Functions (i.e., Supplier, Function, Consumer). In turn the framework provides necessary abstraction to enable execution of these functions in various environments (e.g., REST, Streaming) as well as serverless environments such as AWS Lambda or Azure Functions, without having to worry about the underlying platform-specific details. This allows developers to focus on writing their business logic and let the framework handle the rest.&lt;/p&gt;
&lt;p&gt;Spring Cloud Function uses the &lt;code&gt;java.util.function.Function/Supplier/Consumer&lt;/code&gt; Interfaces as building blocks for defining the structure of the function, including the input and output types.&lt;/p&gt;
&lt;p&gt;Here&apos;s a simple example of a Spring Cloud Function that takes in a string and returns the string in uppercase:&lt;/p&gt;
&lt;p&gt;First, we define the function interface:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;public interface UppercaseFunction extends Function&amp;#x3C;String, String&gt; { }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we register the function as a bean:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Bean
public UppercaseFunction uppercase() {
    return value -&gt; value.toUpperCase();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a basic example of what you can do with Spring Cloud Function, you can use it for more complex use cases like connecting to a database, or consuming messages from a queue, and more.
By itself it is just a piece of code implemented as a Java function and registered as Spring Bean. However, with Spring Cloud Function this function can become a handler of a REST request or a message handler triggered by a messaging system such as Kafka. The same function can also execute in serverless environments such as AWS Lambda or Microsoft Azure, all without changes to its implementation. And that is what this post is about, specifically integration of Spring Cloud Function with Microsoft Azure.&lt;/p&gt;
&lt;h2&gt;What is Azure Java Function?&lt;/h2&gt;
&lt;p&gt;The Azure Java Functions is a service that allows you to write Java-based serverless functions, running them on Azure infrastructure, with the ability to integrate with other Azure services and frameworks like Spring Boot.&lt;/p&gt;
&lt;p&gt;The Azure Functions runtime takes care of scaling, security, and monitoring of your function app, and provides easy integration with other Azure services.
You can read more about Azure Java Functions &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/azure-functions/functions-reference-java?tabs=bash%2Cconsumption&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Spring Cloud Function as Azure Function&lt;/h4&gt;
&lt;p&gt;Spring Cloud Function provides an adapter to deploy and run Java functions as Azure Java Functions.&lt;/p&gt;
&lt;p&gt;In order to use Spring Cloud Function with Azure Java Functions, you need to have the &lt;code&gt;spring-cloud-function-adapter-azure&lt;/code&gt; dependency on your classpath:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;#x3C;dependency&gt;
    &amp;#x3C;groupId&gt;org.springframework.cloud&amp;#x3C;/groupId&gt;
    &amp;#x3C;artifactId&gt;spring-cloud-function-adapter-azure&amp;#x3C;/artifactId&gt;
    &amp;#x3C;version&gt;4.0.1&amp;#x3C;/version&gt;
&amp;#x3C;/dependency&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It&apos;s important to note that using Spring Cloud Function enables  you to use simple Java Function programming model on Azure Java Functions, but the underlying infrastructure is still Azure Functions, you still need to manage the scaling, security, and monitoring of the Azure Function app, and the integration with other Azure services.&lt;/p&gt;
&lt;p&gt;Let’s look at the example. For this we need to factor out the business logic (i.e., uppercasing the String) into a dedicated function called &lt;code&gt;uppercase&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import java.util.function.Function;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

@SpringBootApplication
public class HttpTriggerDemoApplication {

   @Bean
   public Function&amp;#x3C;String, String&gt; uppercase() {
       return payload -&gt; {
           String output = payload.toUpperCase();
           return String.format(&quot;Input: %s&quot;, output);         
       }
   }

	 @Bean
	 public Function&amp;#x3C;String, String&gt; reverse() {
		  return payload -&gt; new StringBuilder(payload).reverse().toString();
	 }

   public static void main(String[] args) {
       SpringApplication.run(HttpTriggerDemoApplication.class, args);
   }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This example uses the &lt;code&gt;@SpringBootApplication&lt;/code&gt; annotation to configure a Spring Boot application and the &lt;code&gt;@Bean&lt;/code&gt; annotation to define a function bean.
Then to run this function on Azure Java Function, you need to create a new function app on Azure and configure it to use the Java runtime.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import java.util.Optional;
import java.util.function.Function;
import com.microsoft.azure.functions.ExecutionContext;
import com.microsoft.azure.functions.HttpMethod;
import com.microsoft.azure.functions.HttpRequestMessage;
import com.microsoft.azure.functions.annotation.AuthorizationLevel;
import com.microsoft.azure.functions.annotation.FunctionName;
import com.microsoft.azure.functions.annotation.HttpTrigger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.function.context.FunctionCatalog;
import org.springframework.stereotype.Component;

@Component
public class AzureJavaExampleFunctionWithSpring {

   /**
    * Plain Spring bean (not Spring Cloud Functions!)
    */
   @Autowired
   private Function&amp;#x3C;String, String&gt; uppercase;

   /**
    * The FunctionCatalog leverages the Spring Cloud Function framework.
    */
   @Autowired
   private FunctionCatalog functionCatalog;

   @FunctionName(&quot;bean&quot;)
   public String plainBeans(
           @HttpTrigger(name = &quot;req&quot;, methods = { HttpMethod.GET,
                   HttpMethod.POST }, authLevel = AuthorizationLevel.ANONYMOUS) HttpRequestMessage&amp;#x3C;Optional&amp;#x3C;String&gt;&gt; request,
           ExecutionContext context) {

       // Use plain Spring Beans.
       return uppercase.apply(request.getBody().orElse(&quot;Hello World&quot;));
   }

   @FunctionName(&quot;scf&quot;)
   public String springCloudFunction(
            @HttpTrigger(name = &quot;req&quot;, methods = { HttpMethod.GET,
                    HttpMethod.POST }, authLevel = AuthorizationLevel.ANONYMOUS) HttpRequestMessage&amp;#x3C;Optional&amp;#x3C;String&gt;&gt; request,
            ExecutionContext context) {

        // Use SCF composition. 
        Function composed = this.functionCatalog.lookup(&quot;reverse|uppercase&quot;);

        return (String) composed.apply(request.getBody().orElse(&quot;Hello World&quot;));
    }   
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;AzureJavaExampleFunctionWithSpring&lt;/code&gt; class is annotated with standard Azure annotations such as @FunctionName and &lt;code&gt;@HttpTrigger&lt;/code&gt; and internally it calls the &lt;code&gt;uppercase&lt;/code&gt; function defined in the &lt;code&gt;HttpTriggerDemoApplication&lt;/code&gt;.
The &lt;code&gt;@Component&lt;/code&gt; annotation is what makes this Azure application also a Spring application, thus providing integration point with Spring Cloud Function and other Spring managed components through Spring dependency injections such as autowiring the &lt;code&gt;uppercase&lt;/code&gt; or &lt;code&gt;functionCatalog&lt;/code&gt; beans. Note that the &lt;code&gt;AzureJavaExampleFunctionWithSpring&lt;/code&gt; is a fully fledged Spring component, so you can autowire any Spring bean (not only functions), use property configurations and any other Spring Framework feature.&lt;/p&gt;
&lt;p&gt;Note that the &lt;code&gt;plainBeans&lt;/code&gt; function uses plain Spring beans, while the &lt;code&gt;springCloudFunctin&lt;/code&gt; leverages the &lt;code&gt;FunctionCatalog&lt;/code&gt; to compose multiple Spring Cloud Functions.&lt;/p&gt;
&lt;h4&gt;Deploying to Microsoft Azure&lt;/h4&gt;
&lt;p&gt;You need to package your function as a fat jar, and then deploy it to your Azure Function App. Once deployed you can trigger your function either by HTTP request, events from Azure services like Event Hub, Service Bus, etc.&lt;/p&gt;
&lt;p&gt;You can also use the maven plugin &lt;code&gt;com.microsoft.azure:azure-functions-maven-plugin&lt;/code&gt; to deploy the function to the azure function, the maven plugin can be configured by adding the following to your pom.xml:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;#x3C;plugin&gt;
  &amp;#x3C;groupId&gt;com.microsoft.azure&amp;#x3C;/groupId&gt;
  &amp;#x3C;artifactId&gt;azure-functions-maven-plugin&amp;#x3C;/artifactId&gt;
  &amp;#x3C;version&gt;1.22.0&amp;#x3C;/version&gt;
  &amp;#x3C;configuration&gt;
      &amp;#x3C;appName&gt;scf-samples&amp;#x3C;/appName&gt;
      &amp;#x3C;resourceGroup&gt;java-functions-group&amp;#x3C;/resourceGroup&gt;
      &amp;#x3C;region&gt;westus&amp;#x3C;/region&gt;
      &amp;#x3C;appServicePlanName&gt;java-functions-app-service-plan&amp;#x3C;/appServicePlanName&gt;
      &amp;#x3C;pricingTier&gt;EP1&amp;#x3C;/pricingTier&gt;
      &amp;#x3C;hostJson&gt;${project.basedir}/src/main/resources/host.json&amp;#x3C;/hostJson&gt;

      &amp;#x3C;runtime&gt;
          &amp;#x3C;os&gt;linux&amp;#x3C;/os&gt;
          &amp;#x3C;javaVersion&gt;17&amp;#x3C;/javaVersion&gt;
      &amp;#x3C;/runtime&gt;

      &amp;#x3C;funcPort&gt;7072&amp;#x3C;/funcPort&gt;

      &amp;#x3C;appSettings&gt;
          &amp;#x3C;property&gt;
              &amp;#x3C;name&gt;FUNCTIONS_EXTENSION_VERSION&amp;#x3C;/name&gt;
              &amp;#x3C;value&gt;~4&amp;#x3C;/value&gt;
          &amp;#x3C;/property&gt;
      &amp;#x3C;/appSettings&gt;
  &amp;#x3C;/configuration&gt;
  &amp;#x3C;executions&gt;
      &amp;#x3C;execution&gt;
          &amp;#x3C;id&gt;package-functions&amp;#x3C;/id&gt;
          &amp;#x3C;goals&gt;
              &amp;#x3C;goal&gt;package&amp;#x3C;/goal&gt;
          &amp;#x3C;/goals&gt;
      &amp;#x3C;/execution&gt;
  &amp;#x3C;/executions&gt;
&amp;#x3C;/plugin&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will integrate your Azure Java Function with Spring Cloud Function and you can leverage the power of Spring Cloud Function like Function composition, POJO based development and many more.&lt;/p&gt;
&lt;p&gt;For more information check the updated &lt;a href=&quot;https://docs.spring.io/spring-cloud-function/docs/4.0.2-SNAPSHOT/reference/html/azure.html#_microsoft_azure&quot;&gt;Azure adapter referecnce documentation&lt;/a&gt; and various examples can be found this &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-function/tree/main/spring-cloud-function-samples/function-azure-di-samples&quot;&gt;samples&lt;/a&gt; folder&lt;/p&gt;
&lt;h4&gt;Appendix1: Convert legacy code. From FunctinoInvoker to DI Azure Function integration&lt;/h4&gt;
&lt;p&gt;Any existing application that uses FunctionInvoker can easily be converted into the new DI Azure Function integration style.&lt;/p&gt;
&lt;p&gt;For example let&apos;s convert the following sample application that uses the legacy FunctionInvoker style.&lt;/p&gt;
&lt;p&gt;The Spring Boot defines the boot application and a Spring Cloud Function called uppercase:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import java.util.Map;
import java.util.function.Function;
import com.microsoft.azure.functions.ExecutionContext;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.function.json.JsonMapper;
import org.springframework.context.annotation.Bean;
import org.springframework.messaging.Message;

@SpringBootApplication
public class Config {

   public static void main(String[] args) throws Exception {
       SpringApplication.run(Config.class, args);
   }

   @Bean
   public Function&amp;#x3C;Message&amp;#x3C;String&gt;, String&gt; uppercase(JsonMapper mapper) {
       return message -&gt; {
           String value = message.getPayload();
           try {
               Map&amp;#x3C;String, String&gt; map = mapper.fromJson(value, Map.class);

               if(map != null)
                   map.forEach((k, v) -&gt; map.put(k, v != null ? v.toUpperCase() : null));

               return mapper.toString(map);
           } catch (Exception e) {
               e.printStackTrace();
               return (&quot;Function error: - bad request&quot;);
           }
       };
   }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the FunctionInvoker that uses the uppercase function as an Azure Function would look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.microsoft.azure.functions.ExecutionContext;
import com.microsoft.azure.functions.HttpMethod;
import com.microsoft.azure.functions.HttpRequestMessage;
import com.microsoft.azure.functions.annotation.AuthorizationLevel;
import com.microsoft.azure.functions.annotation.FunctionName;
import com.microsoft.azure.functions.annotation.HttpTrigger;
import java.util.Optional;
import org.springframework.cloud.function.adapter.azure.FunctionInvoker;
import org.springframework.messaging.Message;
import org.springframework.messaging.support.MessageBuilder;

public class UppercaseHandler extends FunctionInvoker&amp;#x3C;Message&amp;#x3C;String&gt;, String&gt; {

   @FunctionName(&quot;uppercase&quot;)
   public String execute(
       @HttpTrigger(
           name = &quot;req&quot;,
           methods = {HttpMethod.GET, HttpMethod.POST},
           authLevel = AuthorizationLevel.ANONYMOUS) HttpRequestMessage&amp;#x3C;Optional&amp;#x3C;String&gt;&gt; request,
       ExecutionContext context
   ) {
       context.getLogger().warning(&quot;Using Java (&quot; + System.getProperty(&quot;java.version&quot;) + &quot;)&quot;);
       Message&amp;#x3C;String&gt; message = MessageBuilder.withPayload(request.getBody().get())
           .copyHeaders(request.getHeaders()).build();
       return handleRequest(message, context);
   }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that by convention the &lt;code&gt;@FunctionName&lt;/code&gt; must match the @Bean function name (in the Config class).&lt;/p&gt;
&lt;p&gt;It is straightforward to refactor the UppercaseHandler class so that we replace the legacy FunctionInvoker with DI like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.microsoft.azure.functions.ExecutionContext;
import com.microsoft.azure.functions.HttpMethod;
import com.microsoft.azure.functions.HttpRequestMessage;
import com.microsoft.azure.functions.annotation.AuthorizationLevel;
import com.microsoft.azure.functions.annotation.FunctionName;
import com.microsoft.azure.functions.annotation.HttpTrigger;

import java.util.Optional;

import org.springframework.cloud.function.adapter.azure.FunctionInvoker;
import org.springframework.messaging.Message;
import org.springframework.messaging.support.MessageBuilder;

@Component
public class UppercaseHandler {

   @Autowired
   private Function&amp;#x3C;Message&amp;#x3C;String&gt;, String&gt; uppercase;

   @FunctionName(&quot;uppercase&quot;)
   public String execute(
       @HttpTrigger(
           name = &quot;req&quot;,
           methods = {HttpMethod.GET, HttpMethod.POST},
           authLevel = AuthorizationLevel.ANONYMOUS) HttpRequestMessage&amp;#x3C;Optional&amp;#x3C;String&gt;&gt; request,
       ExecutionContext context
   ) {
       context.getLogger().warning(&quot;Using Java (&quot; + System.getProperty(&quot;java.version&quot;) + &quot;)&quot;);
       Message&amp;#x3C;String&gt; message = MessageBuilder.withPayload(request.getBody().get())
           .copyHeaders(request.getHeaders()).build();
       return uppercase.apply(message);
   }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Add the &lt;code&gt;@Component&lt;/code&gt; class annotation.&lt;/li&gt;
&lt;li&gt;Remove the &lt;code&gt;FunctionInvoke&lt;/code&gt; class inheritance.&lt;/li&gt;
&lt;li&gt;Autowire the required Function beans. Any Spring service and autowiring technique is supported.&lt;/li&gt;
&lt;li&gt;Replace the &lt;code&gt;handleRequest&lt;/code&gt; method call with an explicit function call.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is all now you can build and deploy your application.&lt;/p&gt;</content:encoded></item></channel></rss>